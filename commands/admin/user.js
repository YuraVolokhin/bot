const { Op } = require("sequelize");
const { Markup } = require("telegraf");
const { User, Profit, Ad } = require("../../database");
const locale = require("../../locale");

module.exports = async (ctx, id) => {
  try {
    const user = await User.findOne({
      where: {
        [Op.or]: [
          {
            id,
          },
          {
            username: id,
          },
        ],
      },
      include: [
        {
          association: "request",
        },
      ],
    });

    if (!user)
      return ctx
        .replyOrEdit("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", {
          reply_markup: Markup.inlineKeyboard([
            [Markup.callbackButton(locale.go_back, "admin")],
          ]),
        })
        .catch((err) => err);

    const stats = {
      profits: await Profit.count({
        where: {
          userId: user.id,
        },
      }),
      profits_sum: parseFloat(
        await Profit.sum("convertedAmount", {
          where: {
            userId: user.id,
          },
        })
      ).toFixed(2),
      ads: await Ad.count({
        where: {
          userId: user.id,
        },
      }),
    };

    const userProfitsSum =
        (parseFloat(
          await Profit.sum("convertedAmount", {
            where: {
              userId: user.id,
              status: 0,
            },
          })
        ) /
          100) *
        ctx.state.bot.payoutPercent,
      userPercentProfitsSum =
        (parseFloat(
          await Profit.sum("convertedAmount", {
            where: {
              status: 0,
              ...(user.percentType == 2
                ? {
                    writerId: user.id,
                  }
                : {}),
            },
          })
        ) /
          100) *
        (user.percent || 0);

    const totalSum = (userProfitsSum + userPercentProfitsSum).toFixed(2);

    const request_btn = user.request
      ? [
          [
            Markup.callbackButton(
              "üì∞ –ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞—è–≤–∫–µ",
              `admin_user_${user.id}_request_${user.request.id}`
            ),
          ],
        ]
      : [];

    return ctx
      .replyOrEdit(
        `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b><a href="tg://user?id=${user.id}">${
          user.username
        }</a></b>
${user.banned ? "<i><b>üö´ –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</b></i>\n" : ""}
üÜî ID: <code>${user.id}</code>
üí∞ –ü—Ä–æ—Ñ–∏—Ç–æ–≤: <b>${stats.profits}</b>
üí∏ –°—É–º–º–∞ –ø—Ä–æ—Ñ–∏—Ç–æ–≤: <b>${stats.profits_sum} RUB</b>
üì¶ –û–±—ä—è–≤–ª–µ–Ω–∏–π: <b>${stats.ads}</b>
üëÄ –ù–∏–∫–Ω–µ–π–º: <b>${user.hideNick ? "—Å–∫—Ä—ã—Ç" : "–Ω–µ —Å–∫—Ä—ã—Ç"}</b>
üö¶ –°—Ç–∞—Ç—É—Å: <b>${
          user.status == 1
            ? locale.roles.admin
            : user.status == 2
            ? locale.roles.writer
            : user.status == 3
            ? locale.roles.pro
            : locale.roles.worker
        }</b>
üíµ –ê–¥–º–∏–Ω—Å–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç: <b>${
          user.percent
            ? `${user.percent}% ${
                user.percentType == 1
                  ? "—Å–æ –≤—Å–µ—Ö –∑–∞–ª–µ—Ç–æ–≤"
                  : user.percentType == 2
                  ? "—Å–æ –≤–±–∏—Ç—ã—Ö –ª–æ–≥–æ–≤"
                  : ""
              }`
            : `–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`
        }</b>
üì∞ –ó–∞—è–≤–∫–∞: <b>${
          user.request
            ? `
‚Äî ID: ${user.request.id}
‚Äî –°—Ç–∞—Ç—É—Å: ${
                user.request.status == 0
                  ? "‚è≥ –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏"
                  : user.request.status == 1
                  ? "‚úÖ –ü—Ä–∏–Ω—è—Ç–∞"
                  : "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–∞"
              }`
            : "–Ω–µ—Ç—É"
        }</b>

<b>üí∞ –ù–µ–≤—ã–ø–ª–∞—á–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç:
‚Äî –°–æ —Å–≤–æ–∏—Ö –∑–∞–ª–µ—Ç–æ–≤: ${userProfitsSum.toFixed(2)} RUB
‚Äî –° –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞: ${userPercentProfitsSum.toFixed(2)} RUB
‚Äî –ò—Ç–æ–≥–æ: ${totalSum} RUB</b>
`,
        {
          parse_mode: "HTML",
          reply_markup: Markup.inlineKeyboard([
            [
              Markup.callbackButton(
                "üí∞ –ü—Ä–æ—Ñ–∏—Ç—ã",
                `admin_user_${user.id}_profits_1`
              ),
            ],
            [
              Markup.callbackButton(
                "üì¶ –û–±—ä—è–≤–ª–µ–Ω–∏—è",
                `admin_user_${user.id}_ads_1`
              ),
            ],
            [
              Markup.callbackButton(
                user.banned ? "‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" : "üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å",
                `admin_user_${user.id}_${user.banned ? "un" : ""}ban`
              ),
            ],
            [
              Markup.callbackButton(
                "üö¶ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å",
                `admin_user_${user.id}_edit_status`
              ),
            ],
            [
              Markup.callbackButton(
                "üíµ –ò–∑–º–µ–Ω–∏—Ç—å –∞–¥–º–∏–Ω—Å–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç",
                `admin_user_${user.id}_select_percent_type`
              ),
            ],
            ...request_btn,
            [Markup.callbackButton(locale.go_back, "admin_users_1")],
          ]),
        }
      )
      .catch((err) => err);
  } catch (err) {
    return ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
  }
};
